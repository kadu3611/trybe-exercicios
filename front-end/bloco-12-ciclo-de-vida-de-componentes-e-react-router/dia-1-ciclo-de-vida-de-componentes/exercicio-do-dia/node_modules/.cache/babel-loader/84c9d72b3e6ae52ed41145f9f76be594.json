{"ast":null,"code":"var _jsxFileName = \"/home/kadu/Documentos/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/exercicio-do-dia/src/Counter.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0\n    };\n    console.log(\"construtor\");\n  }\n\n  componentDidMount() {\n    // Depois dos render \n    console.log(\"componentDidMount\");\n  }\n\n  shouldComponentUpdate() {\n    console.log(\"shouldComponentUpdate State\", this.state, nextState);\n    console.log(\"shouldComponentUpdate Props\", this.state, nextProps);\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"componentDidUpdate PrevState\", this.state, prevState);\n    console.log(\"componentDidUpdate prevProps\", this.state, prevProps);\n  }\n  /* shouldComponentUpdate(nextProps, nextState) { // Quando eu clico e atualizo o número\n    console.log(\"shouldComponentUpdate\");       // Ao inves de vir o constructor vem o shouldComponent\n    return true;\n  }\n     componentDidUpdate(prevProps, prevState) { // Render, shouldComponentUpdate e depois esse\n    console.log(\"componentDidUpdate\");       // logo após ser clicado em atualizar o componente\n  } */\n\n\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Contador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState(state => ({\n          counter: state.counter + 1\n        })),\n        children: \"Soma\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/kadu/Documentos/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/exercicio-do-dia/src/Counter.js"],"names":["React","Counter","Component","constructor","props","state","counter","console","log","componentDidMount","shouldComponentUpdate","nextState","nextProps","componentDidUpdate","prevProps","prevState","render","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAE;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AACFE,EAAAA,qBAAqB,GAAG;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAKH,KAAhD,EAAuDM,SAAvD;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAKH,KAAhD,EAAuDO,SAAvD;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvCR,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,KAAKH,KAAjD,EAAwDU,SAAxD;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,KAAKH,KAAjD,EAAwDS,SAAxD;AACD;AACC;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAGIE,EAAAA,MAAM,GAAG;AACPT,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKS,QAAL,CAAeZ,KAAD,KAAY;AAAEC,UAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AAA3B,SAAZ,CAAd,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAA,kBAAI,KAAKD,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5CiC;;AA8CpC,eAAeL,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        counter: 0\n      };\n      console.log(\"construtor\");\n    }\n  \n    componentDidMount() { // Depois dos render \n      console.log(\"componentDidMount\");\n    }\n   shouldComponentUpdate() { \n    console.log(\"shouldComponentUpdate State\", this.state, nextState);\n    console.log(\"shouldComponentUpdate Props\", this.state, nextProps);\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"componentDidUpdate PrevState\", this.state, prevState);\n    console.log(\"componentDidUpdate prevProps\", this.state, prevProps);\n  }\n    /* shouldComponentUpdate(nextProps, nextState) { // Quando eu clico e atualizo o número\n      console.log(\"shouldComponentUpdate\");       // Ao inves de vir o constructor vem o shouldComponent\n      return true;\n    }\n  \n    componentDidUpdate(prevProps, prevState) { // Render, shouldComponentUpdate e depois esse\n      console.log(\"componentDidUpdate\");       // logo após ser clicado em atualizar o componente\n    } */\n  \n    render() {\n      console.log(\"render\");\n      return (\n        <div>\n          <p>Contador</p>\n          <button\n            onClick={() => this.setState((state) => ({ counter: state.counter + 1 }))}\n          >\n            Soma\n          </button>\n          <p>{this.state.counter}</p>\n        </div>\n      );\n    }\n  }\n  export default Counter;"]},"metadata":{},"sourceType":"module"}